pipeline {
  agent none
  options {
    disableConcurrentBuilds()
  }
  stages {
  stage('build') {
    agent {
      docker {
        image 'modelicaspec/latexml:20190319'
        label 'linux'
        alwaysPull true
      }
    }
    steps {
      sh 'latexmk -pdf MLS.tex'
      sh 'latexml MLS.tex --dest MLS.xml'
      sh 'latexmlpost MLS.xml -format html -pmml --splitat=chapter --javascript=css/LatexML-maybeMathJax.js --navigationtoc=context --css=css/LaTeXML-navbar-left.css --dest MLS.html'
      sh 'tar czf MLS.tar.gz *.html *.css media css/'
      archiveArtifacts artifacts: 'MLS.tar.gz', fingerprint: true
      archiveArtifacts artifacts: 'MLS.pdf', fingerprint: true
      stash name: 'MLS', includes: '*.html,*.css,MLS.pdf,media/**,css/**,MLS.tar.gz'
    }
  }
  stage('upload') {
    when {
      allOf {
        not {
          changeRequest()
        }
        anyOf {
          buildingTag()
          anyOf {
            branch 'jenkins'
            branch 'master'
            branch 'maint/**'                
          }
        }
      }
      beforeAgent true
    }
    agent {
      label 'linux'
    }
    steps {
      unstash name: 'MLS'
      sh "test ! -z ${env.GIT_BRANCH}"
      sshagent (credentials: ['Hudson-SSH-Key']) {
        sh 'ssh-keyscan github.com >> ~/.ssh/known_hosts'
        sh "test -d specification.modelica.org || git clone git@github.com:modelica/specification.modelica.org"
        sh "cd specification.modelica.org/ && git fetch && git reset --hard origin/master"
        sh "rm -rf  'specification.modelica.org/${env.GIT_BRANCH}' && mkdir -p  'specification.modelica.org/${env.GIT_BRANCH}'"
        sh "cp -a *.html *.css MLS.pdf media css 'specification.modelica.org/${env.GIT_BRANCH}'"
        sh """
        cd specification.modelica.org
        git add '${env.GIT_BRANCH}'
        if ! git diff-index --quiet origin/master --; then
          git commit --amend -m "Initial commit"
          git push -f
        fi
        """
      }
    }
  }
  stage('index') {
    agent {
      docker {
        image 'modelicaspec/markdown:20190307'
        label 'linux'
        alwaysPull true
      }
    }
    when {
      allOf {
        not {
          changeRequest()
        }
        branch 'master'
      }
      beforeAgent true
    }
    steps {
      sh 'python3 .CI/index.py'
      sshagent (credentials: ['Hudson-SSH-Key']) {
        sh 'ssh-keyscan github.com >> ~/.ssh/known_hosts'
        sh "test -d specification.modelica.org || git clone git@github.com:modelica/specification.modelica.org"
        sh "cd specification.modelica.org/ && git fetch && git reset --hard origin/master"
        sh "cp -a index.html specification.modelica.org/"
        sh """
        cd specification.modelica.org
        git add index.html
        if ! git diff-index --quiet origin/master --; then
          git commit --amend -m "Initial commit"
          git push -f
        fi
        """
      }
    }
  }
  }
}
